1. 트리 닫을땐 'destroy' 해주어야 한다. 안그러면 에러남
	- $("#id").jstree("destroy");
	
2. sample ajax 코드
	$.ajax({
		method : "POST",
		url : "/targetai/getFactorGrpList.do",
		traditional: true,
		data : JSON.stringify(param),
		contentType:'application/json; charset=utf-8',
		dataType : "json",
		success : function(res) {
			var factorGrpList = res.factorGrpList;
			var factorGrpArr = [];
			
			$.each(factorGrpList, function(idx, factorGrp) {
				var factorGrpObj = {};
				factorGrpObj.id = factorGrp.FACTOR_GRP_ID;
				factorGrpObj.text = factorGrp.FACTOR_GRP_NM;
				factorGrpObj.state = { 'opened' : false, 'selected' : false };
				
				factorGrpArr.push(factorGrpObj);
			});
			
			// RULE EDITOR 트리뷰 생성
			$("#factorTree").jstree({ 
				'core' : {
							'check_callback' : true, // check_callback 이 없으면 create_node가 실행되지않는다
				 			'data' : factorGrpArr
				 		},
				'types' : {
					'default' : {
						'icon' : 'fas fa-folder'
					},
					'file' : {
						'icon' : 'fas fa-file'
					}
				},
				'themes' : {
					'responsive': false
				}, 
				"plugins" : [ 'types' ]
			})
			.bind("select_node.jstree", function (e, data) {	// 노드 선택시 실행되는 이벤트
				
				if(data.node.parent != "#") {	// factor 클릭시 동작할 내용 (ROOT 폴더는 factorGrp)
					var parentNode = $("#factorTree").jstree().get_node(data.node.parent);
					var childNode = data.node;
					
					// Factor Value 조회
					var factorObj = {};
					factorObj.factorGrpNm = parentNode.text;
					factorObj.factorId = childNode.id;
					factorObj.factorNm = childNode.text;
					getFactorVal(factorObj);
					
					return;
				}
				
				if(!data.node.state.opened) {	// factorGrp 가 열려있을 경우는 실행하지 않음
					var grpParam = {};
					grpParam.factorGrpId = data.node.id;
					
					$.ajax({
						method : "POST",
						url : "/targetai/getFactorList.do",
						traditional: true,
						data : JSON.stringify(grpParam),
						contentType:'application/json; charset=utf-8',
						dataType : "json",
						success:function(res) {
							var factorList = res.factorList;
							var factorArr = [];
							
							$.each(factorList, function(idx, factor) {
								var factorObj = {};
								factorObj.id = factor.FACTOR_ID;
								factorObj.text = factor.FACTOR_NM;
								factorObj.state = { 'opened' : false, 'selected' : false };
								
								$('#factorTree').jstree("create_node", data.node.id, factorObj, "first", false);
							});
							
							$("#factorTree").jstree("toggle_node", $("#factorTree").jstree("get_selected"));
						}
					});
					
				} else {	// factgorGrp 가 열려있을 경우 닫음.
					$("#factorTree").jstree("toggle_node", $("#factorTree").jstree("get_selected"));
				}
			})
			.bind("open_node.jstree", function(e, data) {})
			.bind("close_node.jstree", function(e, data) {
				// factorGrp 닫을때 factor 요소 delete
				$("#factorTree").jstree("delete_node", data.node.children);
			});
		},
		beforeSend : function() {
			$("#treeCheckboxLoading").show();
		},
		complete : function() {
			$("#treeCheckboxLoading").hide();
		},
		error : function(jqXHR, textStatus, errorThrown) {
			alertPop("에러발생", "관리자에게 문의하세요", "");
			console.log(jqXHR);
			console.log(textStatus);
			console.log(errorThrown);
		}
	});
